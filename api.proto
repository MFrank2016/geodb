syntax = "proto3";

package api;

option go_package = "api";
import "github.com/mwitkow/go-proto-validators/validator.proto";

service GeoDB {
    rpc Ping(PingRequest) returns(PingResponse){};
    rpc Set(SetRequest) returns(SetResponse){};
    rpc Get(GetRequest) returns(GetResponse){};
    rpc GetRegex(GetRegexRequest) returns(GetRegexResponse){};
    rpc Seek(SeekRequest) returns(SeekResponse){};
    rpc Keys(KeysRequest) returns(KeysResponse){};
    rpc Delete(DeleteRequest) returns(DeleteResponse){};
    rpc Stream(StreamRequest) returns(stream StreamResponse){};
}

message KeysRequest {}

message KeysResponse {
    repeated string keys =1;
}

message StreamRequest {
    string client_id =1;
    string regex =2;
}

message StreamResponse {
    Object object =1;
}

message SetRequest {
    map<string, Object> object =1;
}

message SetResponse {}

message GetRequest {
    repeated string keys =1;
}

message GetResponse {
    map<string, Object> object= 1;
}

message GetRegexRequest {
    string regex =1;
}

message GetRegexResponse {
    map<string, Object> object= 1;
}

message SeekRequest {
    string prefix =1;
}

message SeekResponse {
    map<string, Object> object= 1;
}

message DeleteRequest {
    repeated string keys =1;
}

message DeleteResponse {}

message PingRequest {}

message PingResponse {
    bool ok =1;
}

message Point {
    double lat =1;
    double lon =2;
}

message Object {
    string key =1;
    Point point =2;
    int64 radius =3;
    map<string, string> metadata =4;
    int64 expires_unix =5;
    int64 updated_unix =6;
}


message Event {
    string key =1;
    Point point =2;
    int64 radius =3;
    map<string, string> metadata =4;
    int64 expires_unix =5;
    int64 updated_unix =6;
}